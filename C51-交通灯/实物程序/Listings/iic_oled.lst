C51 COMPILER V9.57.0.0   IIC_OLED                                                          08/17/2021 23:55:11 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE IIC_OLED
OBJECT MODULE PLACED IN .\Objects\iic_oled.obj
COMPILER INVOKED BY: D:\Simulation\ARM\Keil_v5\C51\BIN\C51.EXE iic_oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\实物程序) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\iic_oled.lst) TABS(2) OBJECT(.\Objects\iic_oled.obj)

line level    source

   1          #include "iic_oled.h"
   2          #include "font.h"
   3          /**********************************************
   4          //IIC Start
   5          **********************************************/
   6          void IIC_Start()
   7          {
   8   1        OLED_SCL = 1;
   9   1        OLED_SDIN = 1;
  10   1        OLED_SDIN = 0;
  11   1        OLED_SCL = 0;
  12   1      }
  13          
  14          /**********************************************
  15          //IIC Stop
  16          **********************************************/
  17          void IIC_Stop()
  18          {
  19   1        OLED_SCL = 1 ;
  20   1        OLED_SDIN = 0;
  21   1        OLED_SDIN = 1;
  22   1      
  23   1      }
  24          
  25          void IIC_Wait_Ack()
  26          {
  27   1        OLED_SCL = 1 ;
  28   1        OLED_SCL = 0;
  29   1      }
  30          /**********************************************
  31          // IIC Write byte
  32          **********************************************/
  33          void Write_IIC_Byte(u8 IIC_Byte)
  34          {
  35   1        u8 i;
  36   1        u8 m, da;
  37   1        da = IIC_Byte;
  38   1        OLED_SCL = 0;
  39   1        for(i = 0; i < 8; i++)
  40   1        {
  41   2          m = da;
  42   2          m = m & 0x80;
  43   2          if(m == 0x80)
  44   2          {
  45   3            OLED_SDIN = 1;
  46   3          }
  47   2          else OLED_SDIN = 0;
  48   2          da = da << 1;
  49   2          OLED_SCL = 1;
  50   2          OLED_SCL = 0;
  51   2        }
  52   1      
  53   1      
  54   1      }
C51 COMPILER V9.57.0.0   IIC_OLED                                                          08/17/2021 23:55:11 PAGE 2   

  55          /**********************************************
  56          // IIC Write Command
  57          **********************************************/
  58          void Write_IIC_Command(u8 IIC_Command)
  59          {
  60   1        IIC_Start();
  61   1        Write_IIC_Byte(0x78);            //Slave address,SA0=0
  62   1        IIC_Wait_Ack();
  63   1        Write_IIC_Byte(0x00);     //write command
  64   1        IIC_Wait_Ack();
  65   1        Write_IIC_Byte(IIC_Command);
  66   1        IIC_Wait_Ack();
  67   1        IIC_Stop();
  68   1      }
  69          /**********************************************
  70          // IIC Write Data
  71          **********************************************/
  72          void Write_IIC_Data(u8 IIC_Data)
  73          {
  74   1        IIC_Start();
  75   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
  76   1        IIC_Wait_Ack();
  77   1        Write_IIC_Byte(0x40);     //write data
  78   1        IIC_Wait_Ack();
  79   1        Write_IIC_Byte(IIC_Data);
  80   1        IIC_Wait_Ack();
  81   1        IIC_Stop();
  82   1      }
  83          void OLED_WR_Byte(unsigned dat, unsigned cmd)
  84          {
  85   1        if(cmd)
  86   1          Write_IIC_Data(dat);
  87   1        else
  88   1          Write_IIC_Command(dat);
  89   1      }
  90          
  91          //坐标设置
  92          void OLED_Set_Pos(u8 x, u8 y)
  93          {
  94   1        OLED_WR_Byte(0xb0 + y, 0);
  95   1        OLED_WR_Byte((((x + 2) & 0xf0) >> 4) | 0x10, 0);
  96   1        OLED_WR_Byte(((x + 2) & 0x0f), 0);
  97   1      }
  98          
  99          void OLED_Clear(void)
 100          {
 101   1        u8 m, n;
 102   1        for(m = 0; m < 8; m++)
 103   1        {
 104   2          OLED_WR_Byte(0xb0 + m, 0);    //page0-page1
 105   2          OLED_WR_Byte(0x00, 0);    //low column start address
 106   2          OLED_WR_Byte(0x10, 0);    //high column start address
 107   2          for(n = 0; n < 128; n++)
 108   2          {
 109   3            OLED_WR_Byte(0x00, 1);
 110   3          }
 111   2        }
 112   1      }
 113          
 114          
 115          //在指定位置显示一个汉字，需与字库对应
 116          //x:0~127
C51 COMPILER V9.57.0.0   IIC_OLED                                                          08/17/2021 23:55:11 PAGE 3   

 117          //y:0~63
 118          void OLED_ShowHZ(u8 x, u8 y, u8 c)
 119          {
 120   1        u8 i = 0;
 121   1        
 122   1        OLED_Set_Pos(x, y);
 123   1        for(i = 0; i < 24; i++)
 124   1          OLED_WR_Byte(hz[c * 72 + i], 1);
 125   1        
 126   1        OLED_Set_Pos(x, y + 1);
 127   1        for(i = 0; i < 24; i++)
 128   1          OLED_WR_Byte(hz[c * 72 + i + 24], 1);
 129   1        
 130   1          OLED_Set_Pos(x, y+2);
 131   1        for(i = 0; i < 24; i++)
 132   1          OLED_WR_Byte(hz[c * 72 + i+48], 1);
 133   1        
 134   1      }
 135          
 136          //初始化SSD1306
 137          void OLED_Init(void)
 138          {
 139   1        OLED_WR_Byte(0xAE, 0); //--display off
 140   1        OLED_WR_Byte(0x00, 0); //---set low column address
 141   1        OLED_WR_Byte(0x10, 0); //---set high column address
 142   1        OLED_WR_Byte(0x40, 0); //--set start line address
 143   1        OLED_WR_Byte(0xB0, 0); //--set page address
 144   1        OLED_WR_Byte(0x81, 0); // contract control
 145   1        OLED_WR_Byte(0xFF, 0); //--128
 146   1        OLED_WR_Byte(0xA1, 0); //set segment remap
 147   1        OLED_WR_Byte(0xA6, 0); //--normal / reverse
 148   1        OLED_WR_Byte(0xA8, 0); //--set multiplex ratio(1 to 64)
 149   1        OLED_WR_Byte(0x3F, 0); //--1/32 duty
 150   1        OLED_WR_Byte(0xC8, 0); //Com scan direction
 151   1        OLED_WR_Byte(0xD3, 0); //-set display offset
 152   1        OLED_WR_Byte(0x00, 0); //
 153   1      
 154   1        OLED_WR_Byte(0xD5, 0); //set osc division
 155   1        OLED_WR_Byte(0x80, 0); //
 156   1      
 157   1        OLED_WR_Byte(0xD8, 0); //set area color mode off
 158   1        OLED_WR_Byte(0x05, 0); //
 159   1      
 160   1        OLED_WR_Byte(0xD9, 0); //Set Pre-Charge Period
 161   1        OLED_WR_Byte(0xF1, 0); //
 162   1      
 163   1        OLED_WR_Byte(0xDA, 0); //set com pin configuartion
 164   1        OLED_WR_Byte(0x12, 0); //
 165   1      
 166   1        OLED_WR_Byte(0xDB, 0); //set Vcomh
 167   1        OLED_WR_Byte(0x30, 0); //
 168   1      
 169   1        OLED_WR_Byte(0x8D, 0); //set charge pump enable
 170   1        OLED_WR_Byte(0x14, 0); //
 171   1      
 172   1        OLED_WR_Byte(0xAF, 0); //--turn on oled panel
 173   1      }
 174          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    607    ----
C51 COMPILER V9.57.0.0   IIC_OLED                                                          08/17/2021 23:55:11 PAGE 4   

   CONSTANT SIZE    =    720    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
